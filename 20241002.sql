CREATE TABLE HEIGHT_INFO AS
SELECT STUDNO, NAME, HEIGHT FROM STUDENT WHERE 1 = 0;

SELECT * FROM HEIGHT_INFO;

CREATE TABLE WEIGHT_INFO AS
SELECT STUDNO, NAME, WEIGHT FROM STUDENT WHERE 1 = 0;

SELECT * FROM WEIGHT_INFO;

-- 2학년 이상의 학생, HEIGHT_INFO에는 학번, 이름, 키 / WEIGHT_INFO에는 학번, 이름, 체중 입력
INSERT ALL
INTO HEIGHT_INFO VALUES(STUDNO, NAME, HEIGHT)
INTO WEIGHT_INFO VALUES(STUDNO, NAME, WEIGHT)
SELECT * FROM STUDENT s WHERE GRADE >= '2';

DELETE FROM HEIGHT_INFO;
DELETE FROM WEIGHT_INFO;

-- 2학년 이상의 학생, HEIGHT_INFO에는 학번, 이름, 키 / WEIGHT_INFO에는 학번, 이름, 체중 입력
-- INSERT ALL CONDITIONAL
-- HEIGHT_INFO에는 키 170 이상만
-- WEIGHT_INFO에는 체중 70 이상만
INSERT ALL
WHEN HEIGHT > 170 THEN
	INTO HEIGHT_INFO VALUES(STUDNO, NAME, HEIGHT)
WHEN WEIGHT > 70 THEN
	INTO WEIGHT_INFO VALUES(STUDNO, NAME, WEIGHT)
SELECT * FROM STUDENT WHERE GRADE >= '2';

-- PIVOTING
CREATE TABLE SALES (
	SALES_NO NUMBER,
	WEEK_NO NUMBER,
	SALES_MON NUMBER,
	SALES_TUE NUMBER,
	SALES_WED NUMBER,
	SALES_THU NUMBER,
	SALES_FRI NUMBER
);

CREATE TABLE SALES_DATA (
	SALES_NO NUMBER,
	WEEK_NO NUMBER,
	DAY_NO NUMBER,
	SALES NUMBER
);

INSERT INTO SALES VALUES (1101, 4, 100, 150, 80, 60, 120);
INSERT INTO SALES VALUES (1102, 5, 300, 300, 230, 120, 150);

SELECT * FROM SALES;

INSERT ALL
INTO SALES_DATA VALUES (SALES_NO, WEEK_NO, 1, SALES_MON)
INTO SALES_DATA VALUES (SALES_NO, WEEK_NO, 2, SALES_TUE)
INTO SALES_DATA VALUES (SALES_NO, WEEK_NO, 3, SALES_WED)
INTO SALES_DATA VALUES (SALES_NO, WEEK_NO, 4, SALES_THU)
INTO SALES_DATA VALUES (SALES_NO, WEEK_NO, 5, SALES_FRI)
SELECT * FROM SALES;

SELECT * FROM SALES_DATA;


-- 교수 번호가 9903인 교수의 직급을 부교수로 수정
SELECT *FROM PROFESSOR WHERE PROFNO = '9903';
UPDATE PROFESSOR SET "POSITION" = '부교수'
WHERE PROFNO = '9903';

-- 교수 번호가 9903인 교수의 직급을 전임교수로, 아이디를 litlePascal로, 급여를 20 올린 데이터로 수정
SELECT *FROM PROFESSOR WHERE PROFNO = '9903';

UPDATE PROFESSOR SET 
	"POSITION" = '전임교수',
	USERID = 'litPascal',
	SAL = SAL + 20
WHERE PROFNO = '9903';

-- 컴퓨터공학과 소속 학생 데이터 삭제
DELETE FROM STUDENT
WHERE DEPTNO = (
	SELECT DEPTNO FROM DEPARTMENT WHERE DNAME = '컴퓨터공학과'
	);
SELECT * FROM STUDENT s ;

-- MERGE
CREATE TABLE PROF_TEMP AS
SELECT *
FROM PROFESSOR 
WHERE POSITION = '교수';

UPDATE PROF_TEMP 
SET POSITION = '명예교수'
WHERE POSITION = '교수';

SELECT *
FROM PROF_TEMP;

INSERT INTO PROF_TEMP
VALUES(9999, '김도경', 'arom21', '전임강사', 200, SYSDATE, 10, 101);

MERGE INTO PROFESSOR p 
	USING PROF_TEMP f
	ON(p.PROFNO = f.PROFNO)
WHEN MATCHED THEN 
	UPDATE SET p.POSITION = f.POSITION
WHEN NOT MATCHED THEN 
	INSERT VALUES(f.PROFNO, f.NAME, f.USERID, f.POSITION, f.SAL, f.HIREDATE, f.COMM, f.DEPTNO);
	
SELECT *
FROM PROFESSOR p ;

